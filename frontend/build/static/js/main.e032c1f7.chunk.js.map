{"version":3,"sources":["AppNavbar.js","Home.js","ClientList.js","ClientEdit.js","App.js","reportWebVitals.js","index.js"],"names":["AppNavbar","Component","constructor","props","super","this","state","isOpen","toggle","bind","setState","render","_jsx","Navbar","color","dark","expand","children","NavbarBrand","tag","Link","to","Home","_jsxs","Container","fluid","Button","ClientList","clients","remove","componentDidMount","fetch","then","response","json","data","id","concat","method","headers","updatedClients","filter","i","clientList","map","client","style","whiteSpace","name","email","ButtonGroup","size","onClick","className","Table","width","ClientEdit","emptyItem","item","handleChange","handleSubmit","match","params","event","target","value","preventDefault","body","JSON","stringify","history","push","title","Form","onSubmit","FormGroup","Label","for","Input","type","onChange","autoComplete","withRouter","App","Router","Switch","Route","path","exact","component","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e032c1f7.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Navbar, NavbarBrand} from 'reactstrap';\nimport {Link} from 'react-router-dom';\n\nexport default class AppNavbar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {isOpen: false};\n        this.toggle = this.toggle.bind(this);\n    }\n\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        return <Navbar color=\"dark\" dark expand=\"md\">\n            <NavbarBrand tag={Link} to=\"/\">Home</NavbarBrand>\n        </Navbar>;\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport AppNavbar from './AppNavbar';\nimport { Link } from 'react-router-dom';\nimport { Button, Container } from 'reactstrap';\n\nclass Home extends Component {\n    render() {\n        return (\n            <div>\n                <AppNavbar/>\n                <Container fluid>\n                    <Button color=\"link\"><Link to=\"/clients\">Clients</Link></Button>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { Link } from 'react-router-dom';\n\nclass ClientList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {clients: []};\n        this.remove = this.remove.bind(this);\n    }\n\n    componentDidMount() {\n        fetch('/clients')\n            .then(response => response.json())\n            .then(data => this.setState({clients: data}));\n    }\n\n    async remove(id) {\n        await fetch(`/clients/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        }).then(() => {\n            let updatedClients = [...this.state.clients].filter(i => i.id !== id);\n            this.setState({clients: updatedClients});\n        });\n    }\n\n    render() {\n        const {clients} = this.state;\n\n        const clientList = clients.map(client => {\n            return <tr key={client.id}>\n                <td style={{whiteSpace: 'nowrap'}}>{client.name}</td>\n                <td>{client.email}</td>\n                <td>\n                    <ButtonGroup>\n                        <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/clients/\" + client.id}>Edit</Button>\n                        <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(client.id)}>Delete</Button>\n                    </ButtonGroup>\n                </td>\n            </tr>\n        });\n\n        return (\n            <div>\n                <AppNavbar/>\n                <Container fluid>\n                    <div className=\"float-right\">\n                        <Button color=\"success\" tag={Link} to=\"/clients/new\">Add Client</Button>\n                    </div>\n                    <h3>Clients</h3>\n                    <Table className=\"mt-4\">\n                        <thead>\n                        <tr>\n                            <th width=\"30%\">Name</th>\n                            <th width=\"30%\">Email</th>\n                            <th width=\"40%\">Actions</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {clientList}\n                        </tbody>\n                    </Table>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default ClientList;","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\n\nclass ClientEdit extends Component {\n\n    emptyItem = {\n        name: '',\n        email: ''\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: this.emptyItem\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        if (this.props.match.params.id !== 'new') {\n            const client = await (await fetch(`/clients/${this.props.match.params.id}`)).json();\n            this.setState({item: client});\n        }\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let item = {...this.state.item};\n        item[name] = value;\n        this.setState({item});\n    }\n\nasync handleSubmit(event) {\n    event.preventDefault();\n    const {item} = this.state;\n\n    await fetch('/clients' + (item.id ? '/' + item.id : ''), {\n        method: (item.id) ? 'PUT' : 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(item),\n    });\n    this.props.history.push('/clients');\n}\n\n    render() {\n        const {item} = this.state;\n        const title = <h2>{item.id ? 'Edit Client' : 'Add Client'}</h2>;\n\n        return <div>\n            <AppNavbar/>\n            <Container>\n                {title}\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label for=\"name\">Name</Label>\n                        <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''}\n                               onChange={this.handleChange} autoComplete=\"name\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"email\">Email</Label>\n                        <Input type=\"text\" name=\"email\" id=\"email\" value={item.email || ''}\n                               onChange={this.handleChange} autoComplete=\"email\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\n                        <Button color=\"secondary\" tag={Link} to=\"/clients\">Cancel</Button>\n                    </FormGroup>\n                </Form>\n            </Container>\n        </div>\n    }\n}\n\nexport default withRouter(ClientEdit);","import React, { Component } from 'react';\nimport './App.css';\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport ClientList from './ClientList';\nimport ClientEdit from \"./ClientEdit\";\n\nclass App extends Component {\n  render() {\n    return (\n        <Router>\n          <Switch>\n            <Route path='/' exact={true} component={Home}/>\n            <Route path='/clients' exact={true} component={ClientList}/>\n            <Route path='/clients/:id' component={ClientEdit}/>\n          </Switch>\n        </Router>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}